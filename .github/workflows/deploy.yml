name: Build and Publish Docker Image

on:
  push:
    branches:
      - main # Oder deinen gew체nschten Branch

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 'latest' # Oder deine gew체nschte Version
    
    - name: Install Dependencies
      run: npm install

    - name: Run Tests
      run: npm run test # Stelle sicher, dass dieses Script in deiner package.json definiert ist

  build-and-publish:
    needs: test # Abh채ngig vom 'test'-Job
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 'latest' # Oder deine gew체nschte Version

    - name: Install Dependencies
      run: npm install

    - name: Get Version
      id: package-version
      run: echo "::set-output name=version::$(node -p "require('./package.json').version")"

    - name: Build Docker Image
      run: docker build -t dockerreg.m-loeffler.de/yiffbot:${{ steps.package-version.outputs.version }} .    
    - name: Push Docker Image
      run: docker push dockerreg.m-loeffler.de/yiffbot:${{ steps.package-version.outputs.version }}

    - name: Login to Docker Registry
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USERNAME_PROD }}
        password: ${{ secrets.SSH_PASSWORD_PROD }}
        port: ${{ secrets.SSH_PORT }}
        script: 'DEPLOY_ENV=prod DOCKER_USERNAME=${{secrets.DOCKER_USERNAME}} DOCKER_PASSWORD=${{secrets.DOCKER_PASSWORD}} docker login'

    - name: Deploy on server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        script: 'DEPLOY_ENV=prod docker compose up -d'