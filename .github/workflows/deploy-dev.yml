name: Build and Publish Docker Image for development

on:
  push:
    branches:
      - develop

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 'latest' # Oder deine gewünschte Version
    
    - name: Install Dependencies
      run: npm install

    - name: Run Tests
      run: npm run test # Stelle sicher, dass dieses Script in deiner package.json definiert ist

  build-and-publish:
    needs: test # Abhängig vom 'test'-Job
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 'latest' # Oder deine gewünschte Version

    - name: Install Dependencies
      run: npm install

    - name: Build Docker Image
      run: docker build -t dockerreg.m-loeffler.de/yiffbot:dev .

    #- name: Login to Docker Registry
    #  run: ssh actions-yiffbot-develop@m-loeffler.de 'DOCKER_USERNAME=${{secrets.DOCKER_USERNAME}} DOCKER_PASSWORD=${{secrets.DOCKER_PASSWORD}} docker login'
    
    - name: Push Docker Image
      run: docker push dockerreg.m-loeffler.de/yiffbot:dev

    - name: Login to Docker Registry
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        script: 'DEPLOY_ENV=develop DOCKER_USERNAME=${{secrets.DOCKER_USERNAME}} DOCKER_PASSWORD=${{secrets.DOCKER_PASSWORD}} docker login'

    - name: Deploy on server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        script: 'DEPLOY_ENV=develop docker compose up -d'